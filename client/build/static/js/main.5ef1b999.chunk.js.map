{"version":3,"sources":["components/DrinkList/index.js","utils/queries.js","pages/Home.js","utils/auth.js","pages/Users.js","utils/mutations.js","components/SignUp/index.js","components/Login/index.js","pages/Login-SignUp.js","components/SearchDrinks/index.js","pages/NonUsers.js","components/DrinkSelection/index.js","pages/SingleDrink.js","components/Header/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["DrinkList","drinks","drinksTitle","showTitle","showUsername","className","map","drink","to","drinkImage","drinkAuthor","style","fontSize","createdAt","drinksIngredients","_id","QUERY_USER","gql","QUERY_DRINKS","QUERY_ME","Home","useQuery","loading","data","drinkTitle","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Users","userParam","useParams","username","variables","user","me","Auth","loggedIn","getProfile","ADD_USER","LOGIN_USER","SignUp","useState","email","password","formState","setFormState","useMutation","addUser","error","handleChange","event","target","name","value","handleFormSubmit","a","preventDefault","console","log","login","onSubmit","placeholder","type","onChange","cursor","message","Login","props","LoginSignUp","SearchDrinks","city","updateCity","updateDrink","weather","updateWeather","getTheWeather","fetch","then","response","json","getTheDrink","id","e","onClick","class","main","description","temp","strDrink","strDrinkThumb","src","alt","pathname","NonUsers","DrinkSelection","SingleDrink","Header","logout","Footer","href","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ef1b999.chunk.js","sourcesContent":["import React from 'react';\n// Import `<Link>` component from React Router for internal hyperlinks\nimport { Link } from 'react-router-dom';\n// import DrinkSelection from './DrinkSelection';\n\nconst DrinkList = ({\n  drinks,\n  drinksTitle,\n  showTitle = true,\n  showUsername = true,\n}) => {\n  // if (!drinks.length) {\n  //   return <h3>No Drinks Searched Yet</h3>;\n  // }\n\n  return (\n\n    <div className=\"container\">\n      <div>\n      {showTitle && <h3>{drinksTitle}</h3>}\n      {drinks &&\n        drinks.map((drink) => (\n          <div key={drink._id} className=\"card mb-3\">\n            <h4 className=\"card-header bg-primary text-light p-2 m-0\">\n              {showUsername ? (\n                <Link\n                  className=\"text-light\"\n                  to={`/SingleDrinkList/${drink.drinkImage}`}\n                >\n                  {drink.drinkAuthor} <br />\n                  <span style={{ fontSize: '1rem' }}>\n                    had this drink on {drink.createdAt}\n                  </span>\n                </Link>\n              ) : (\n                <>\n                  <span style={{ fontSize: '1rem' }}>\n                    You had this drink on {drink.createdAt}\n                  </span>\n                </>\n              )}\n            </h4>\n            <div className=\"card-body bg-light p-2\">\n              <p>{drink.drinksIngredients}</p>\n            </div>\n            <Link\n              className=\"btn btn-primary btn-block btn-squared\"\n              to={`/users/${drink._id}`}\n            >\n              Join the discussion on this thought.\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n      \n      /* <div>\n        <div class=\"\">\n          <h4 class=\"classloginsignup bg-dark text-light p-2 center\">\n            1 Drink Name\n          </h4>\n        </div>\n        <div className=\"\">\n          <div className=\" \">\n            <img src=\"https://via.placeholder.com/300x300\" alt=\"Placeholder\" />\n          </div>\n        </div>\n        <button className=\"button is-primary is-outlined has-text-black is-rounded \" >Review Recipe</button>\n      </div> */\n  );\n};\n\n\nexport default DrinkList;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      drinks {\n        _id\n        drinkImage\n        drinksTitle\n        drinksIngredients\n        drinkRecipes\n      }\n    }\n  }\n`;\n\nexport const QUERY_DRINKS = gql`\n  query getDrinks {\n    drinks {\n      _id\n      drinkImage\n      drinksTitle\n      drinksIngredients\n      drinkRecipes\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_DRINK = gql`\nquery getSingleDrink($drinkId: ID!) {\n  drink(drinkId: $drinkId)  {\n    drinks {\n      _id\n      drinkImage\n      drinksTitle\n      drinksIngredients\n      drinkRecipes\n    }\n  }\n}\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      drinks {\n        _id\n        drinkImage\n        drinksTitle\n        drinksIngredients\n        drinkRecipes\n      }\n    }\n  }\n`;","import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport DrinkList from '../components/DrinkList';\n\nimport { QUERY_DRINKS } from '../utils/queries';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_DRINKS);\n  const drinks = data?.drinks || [];\n\n  return (\n     <main>\n      <div className=\"flex-row justify-center\">\n        <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <DrinkList\n              drinks={drinks}\n              drinkTitle=\"nbxnx\"\n            />\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\n\nimport DrinkList from '../components/DrinkList';\n\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst Users = () => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n  // redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Redirect to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"flex-row justify-center mb-3\">\n        <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\n          Viewing {userParam ? `${user.username}'s` : 'your'} profile.\n        </h2>\n\n        <div className=\"col-12 col-md-10 mb-5\">\n          <DrinkList\n            drinks={user.drinks}\n            drinkTitle={`${user.username}'s drinks...`}\n            showTitle={false}\n            showUsername={false}\n          />\n        </div>\n        \n      </div>\n    </div>\n  );\n};\n\nexport default Users;","import { gql } from '@apollo/client';\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\n\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst SignUp = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"\">\n        <div className=\"\">\n          <h4 className=\"classloginsignup p-3\">Sign Up</h4>\n          <div className=\" p-2\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input mb-3\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                /><br/>\n                <input\n                  className=\"form-input mb-3\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                /><br/>\n                <input\n                  className=\"form-input mb-3\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                /><br/>\n                <button\n                  className=\" is-rounded button is-primary is-outlined has-text-black  is-rounded city-button\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default SignUp;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"\">\n        <div className=\"\">\n          <h4 className=\"classloginsignup bg-dark text-light p-2\">Login</h4>\n          <p className=\" p-2 pb-1\">Already have a account. Sign-In to view your recent searches and create your custom fit for every season!</p>\n          <div className=\"p-2\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/Users\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input mb-3\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                /><br/>\n                <input\n                  className=\"form-input mb-3\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                /><br/>\n                <button\n                  className=\"is-rounded button is-primary is-outlined has-text-black  is-rounded city-button\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport SignUp from '../components/SignUp';\nimport Login from '../components/Login';\n\nconst LoginSignUp = () => {\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div className=\" mb-3 p-3\">\n          <Login />\n        </div>\n      </div>\n      <div className=\"flex-row justify-center\">\n        <div className=\" mb-3 p-3\">\n            <SignUp />\n        </div>\n     </div>\n  </main>\n)};\n\nexport default LoginSignUp;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import { useHistory } from \"react-router\";\n\nconst SearchDrinks = () => {\n  const [city, updateCity] = useState(\"\");\n  const [drink, updateDrink] = useState({});\n  const [weather, updateWeather] = useState({});\n  //const drinkData = \n\n  function getTheWeather() {\n    // uses the city \"state\" variable to fill out the queryURL's\n    // makes the call, on data returned...updates state again (a different state), our markup will then be re rendered with our desired output\n\n    const weatherURL =\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n      city +\n      \"&appid=f57cc3d88487e632b111d5d350ce8f21&units=imperial\";\n    getWeather(weatherURL);\n  }\n\n  function getTheDrink() {\n    // uses the city \"state\" variable to fill out the queryURL's\n    // makes the call, on data returned...updates state again (a different state), our markup will then be re rendered with our desired output\n\n    const drinkAPI =\n      \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\" + drink;\n    getDrink(drinkAPI);\n  }\n\n  // function getRandomInt(max) {\n\n  //   // uses the city \"state\" variable to fill out the queryURL's\n  //   // makes the call, on data returned...updates state again (a different state), our markup will then be re rendered with our desired output\n\n  //   const drink1API =\n  //   \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\n  //   getRandom(drink1API);\n  // }\n  // this markup will be re-rendered when state is updated\n  return (\n    <div>\n      <div className=\"dropdown is-mobile \">\n        <div className=\"column is-fullwidth\">\n          <label className=\"label\">Choose Weather</label>\n          <div className=\"control is-fullwidth\">\n            <div className=\"select \">\n              <select>\n                <option>Select dropdown</option>\n                <option>Sun</option>\n                <option>Clouds</option>\n                <option>Snow</option>\n                <option>Rain</option>\n                <option>Windy</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <label className=\"label\">Choose Music</label>\n          <div className=\"control is-fullwidth\">\n            <div className=\"select \">\n              <select>\n                <option>Select dropdown</option>\n                <option>Jazz</option>\n                <option>Pop</option>\n                <option>Classic</option>\n                <option>Rap</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"column is-mobile\">\n          <label className=\"label\">Choose Liquor</label>\n          <div className=\"control\">\n            <div className=\"select is-fu\">\n              <select>\n                <option>Select dropdown</option>\n                <option>Bourbon</option>\n                <option>whisky</option>\n                <option>Gin</option>\n                <option>Vodka</option>\n                <option>Brandy</option>\n                <option>Rum</option>\n                <option>Tequila</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"column\">\n        <div className=\"pb-3\">\n          <label className=\"label\">\n            Enter a city name to see your recommended drink\n          </label>\n          <input\n            id=\"userInput\"\n            className=\"input is-info is-medium\"\n            type=\"text\"\n            placeholder=\"Please type your city name...\"\n            onChange={(e) => {\n              updateCity(e.target.value);\n            }}\n          />\n        </div>\n        <button\n          id=\"weatherButton\"\n          className=\"button is-info is-outlined has-text-black is-rounded city-button\"\n          onClick={() => {\n            getTheWeather();\n            getTheDrink();\n            // getRandomInt();\n          }}\n        >\n          Pick Your Poison\n        </button>\n      </div>\n      <div class=\"container\" id=\"issueContainer\">\n        <p class=\"is-size-4 has-text-centered has-text-info has-background-info-light\">\n          <br />\n          {weather ? \"Here is the weather for: \" + weather.name : \"\"}\n        </p>\n      </div>\n      <div>\n        <p>\n          Weather Condition: {weather.weather ? weather.weather[0].main : \"\"} -{\" \"}\n          {weather.weather ? weather.weather[0].description : \"\"}\n          <br />\n          Current Temperature: {weather.main ? weather.main.temp : \"\"}{\" \"}\n        </p>\n      </div>\n\n      <div class=\"columns is-centered is-desktop\">\n        <div class=\"column is-6\">\n          <div class=\"tile is-parent has-text-centered p-5\">\n            <article class=\"tile is-child box\">\n              <p\n                id=\"drink1Name\"\n                class=\"drinkNames is-size-2 mb-5 has-text-info\"\n              >\n                {drink.drinks ? \"Drink Title: \" + drink.drinks[0].strDrink : \"\"}\n              </p>\n              <figure class=\"image is-4by3\">\n                {drink.drinks\n                  ? \"Drink Title: \" + drink.drinks[0].strDrinkThumb\n                  : \"\"}\n                <img\n                  id=\"image\"\n                  src={drink.drinks ? drink.drinks[0].strDrinkThumb : \"\"}\n                  alt=\"Placeholder\"\n                />\n              </figure>\n              <button\n                id=\"btn\"\n                className=\"button is-info is-outlined has-text-black is-rounded mt-4 recipe-button\"\n                // onClick={selectDrink}\n              >\n                <Link\n                  to={{\n                    pathname: \"/SingleDrink\",\n                    //state: updateDrink(data),\n                  }}\n                >\n                  {\" \"}\n                  View Recipe{\" \"}\n                </Link>\n                \n              </button>\n            </article>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  // useEffect(() => {\n  //   axios.get(weatherURL).then(\n  //     (event) => {\n  //       getUserInputE1(event.target.value).then((response) => {\n  //         getCity(response.data);\n  //         getClouds(response.data);\n  //         getTemp(response.data);\n  //         getWind(response.data);\n  //         // getMyWeather(response.data);\n  //         getWeatherButton(response.data);\n  //         getUserInputE1(response.target.value);\n  //       });\n  //     },\n  //     [weatherURL]\n  //   );\n\n  //   useEffect(() => {\n  //     axios.get(cocktailURL).then((response) => {\n  //       getDrink(response.data);\n  //       getDrink1NameEl(response.data);\n  //       getdrink1NameModal(response.data);\n  //       getIngredientsEl(response.data);\n  //       getRecipeEl(response.data);\n  //     });\n  //   }, [cocktailURL]);\n  // });\n\n  // function matchIngredient(code) {\n  //   // var code = prompt(\"Please enter your city\", \"Ex: Chapel Hill\");\n  //   console.log(code + \" is in matchingredient function\");\n  //   const ingredientArr = [\n  //     {\n  //       min: 200,\n  //       max: 299,\n  //       spirit: \"bourbon\",\n  //     },\n  //     {\n  //       min: 300,\n  //       max: 399,\n  //       spirit: \"whisky\",\n  //     },\n  //     {\n  //       min: 500,\n  //       max: 599,\n  //       spirit: \"gin\",\n  //     },\n  //     {\n  //       min: 600,\n  //       max: 699,\n  //       spirit: \"vodka\",\n  //     },\n  //     {\n  //       min: 700,\n  //       max: 799,\n  //       spirit: \"brandy\",\n  //     },\n  //     {\n  //       min: 800,\n  //       max: 802,\n  //       spirit: \"rum\",\n  //     },\n  //     {\n  //       min: 802,\n  //       max: 805,\n  //       spirit: \"tequila\",\n  //     },\n  //   ];\n  //   ingredientArr.forEach((obj) => {\n  //     if (code >= obj.min && code < obj.max) {\n  //       var drink = obj.spirit;\n  //       console.log(drink);\n\n  //       getDrink(drink);\n  //       // return obj.spirit\n  //     }\n  //   });\n  //   if (ingredientArr.length > 0) {\n  //     return ingredientArr[0];\n  //   }\n\n  //   return false;\n  // }\n\n  // function getDrink(drink) {\n  //   console.log(drink + \"is in get drink function\");\n  //   var drinkAPI =\n  //     \"https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=\" + drink;\n  //   //https://www.thecocktaildb.com/api/json/v1/1/search.php?s=margarita\n  //   //\"https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=\" + drink;\n  //   console.log(drinkAPI);\n  //   fetch(drinkAPI)\n  //     .then(function (response) {\n  //       return response.json();\n  //     })\n  //     .then(function (data) {\n  //       console.log(data);\n  //       //   console.log(data.drinks[0].idDrink);\n  //       //   console.log(data.drinks[0].strDrinkThumb);\n\n  //       function getRandomInt(max) {\n  //         return Math.floor(Math.random() * Math.floor(max));\n  //       }\n  //       // console.log(getRandomInt(data.drinks.length));\n  //       var randomInt = getRandomInt(data.drinks.length);\n  //       console.log(randomInt);\n  //       /////////////////////////////\n\n  //       //************question for Sean here\n  //       var drink1Name = data.drinks[randomInt].strDrink;\n  //       //************question for Sean here^^^^^^^^^^^\n\n  //       console.log(drink1Name);\n  //       var drink1API =\n  //         \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\" +\n  //         drink1Name;\n  //       drink1NameEl.textContent = drink1Name;\n  //       drink1NameModal.textContent = drink1Name;\n  //       fetch(drink1API)\n  //         .then(function (response) {\n  //           return response.json();\n  //         })\n  //         .then(function (data) {\n  //           console.log(data);\n\n  //           var recipeArray = [\n  //             {\n  //               recipe: data.drinks[0].strInstructions,\n  //               picture: data.drinks[0].strDrinkThumb,\n  //             },\n  //           ];\n\n  //           var ingredientArray = [\n  //             data.drinks[0].strIngredient1,\n  //             data.drinks[0].strIngredient2,\n  //             data.drinks[0].strIngredient3,\n  //             data.drinks[0].strIngredient4,\n  //             data.drinks[0].strIngredient5,\n  //             data.drinks[0].strIngredient6,\n  //             data.drinks[0].strIngredient7,\n  //           ];\n  //           recipeEl.textContent = recipeArray[0].recipe;\n  //           console.log(recipeArray);\n  //           ingredientsEl.textContent = ingredientArray;\n  //           console.log(ingredientArray);\n  //           console.log(ingredientArray);\n  //           document.getElementById(\"image\").src = data.drinks[0].strDrinkThumb;\n\n  //           // var recipe1 = data.drinks[0].strInstructions;\n  //           // var glass1 = data.drinks[0].strGlass;\n  //           // var alcohol1 = data.drinks[0].strInstructions;\n  //           // var recipe1 = data.drinks[0].strInstructions\n  //           // console.log(recipe1);\n  //         });\n  //     });\n  // }\n\n  function getWeather(requestURL) {\n    fetch(requestURL)\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (data) {\n        // set the state for weather\n        console.log(\n          \"Here is the Weather data returned from the fetch call: \",\n          data\n        );\n        updateWeather(data);\n      });\n\n    if (city) {\n    }\n  }\n\n  function randomDrink() {\n    const getRandomInt = Math.floor(Math.random() * Math.floor);\n    return getRandomInt(drink.drinks.length);\n  }\n\n  function getDrink() {\n    fetch(\"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\")\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (data) {\n        console.log(\n          \"Here is the Drink data returned from the fetch call: \",\n          data\n        );\n        // console.log(drink.drinks.idDrink);\n        updateDrink(data);\n      });\n  }\n};\n\nexport default SearchDrinks;\n","import React from 'react';\nimport DrinkList from '../components/DrinkList';\nimport SearchDrinks from '../components/SearchDrinks';\n// import DrinkResults from '../components/DrinkResults';\n\nconst NonUsers = () => {\n    return (\n        <main>\n      <div className=\"flex-row justify-center\">\n        <div className=\"mb-3 p-3\">\n          <SearchDrinks />\n        </div>\n      </div>\n      {/* <div className=\"flex-row justify-center\">\n        <div className=\"mb-3 p-3\">\n          <DrinkResults />\n        </div>\n      </div> */}\n      <div className=\"flex-row justify-center\">\n        <div className=\"mb-3 p-3\">\n          <DrinkList />\n        </div>\n      </div>\n      \n  </main>\n    \n    )};\n\nexport default NonUsers;","import React, { useState, useEffect } from \"react\";\n\nconst DrinkSelection = () => {\n    \n  const [drink, updateDrink] = useState({});\n\n  // function getTheDrink() {\n  //   // uses the city \"state\" variable to fill out the queryURL's\n  //   // makes the call, on data returned...updates state again (a different state), our markup will then be re rendered with our desired output\n    \n  //   const drinkAPI = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\" + drink;\n  //   getDrink(drinkAPI);\n  // }\n\n  return (\n    <div>\n      <div class=\"columns is-centered is-desktop\">\n        <div class=\"column is-6\">\n          <div class=\"tile is-parent has-text-centered p-5\">\n            <article class=\"tile is-child box\">\n              <p\n                id=\"drink1Name\"\n                class=\"drinkNames is-size-2 mb-5 has-text-primary\"\n              >\n                {drink.drinks ? ('Drink Title: ' + drink.drinks[0].strDrink) : ''}\n              </p>\n              <figure class=\"image is-4by3\">\n              <img\n                  id=\"image\"\n                  src={drink.drinks ? drink.drinks[0].strDrinkThumb : \"\"}\n                  alt=\"Placeholder\"\n                />\n              </figure>\n              {/* <button\n                id=\"btn\"\n                className=\"button is-primary is-outlined has-text-black is-rounded mt-4 recipe-button\"\n                onClick={selectDrink}\n              >\n                View Recipe\n              </button> */}\n            </article>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  // function getDrink() {\n  //   fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=')\n  //     .then(function (response) {\n  //       return response.json();\n  //     })\n  //     .then(function (data) {\n  //       console.log('Here is the Drink data returned from the fetch call: ', data);\n  //     // console.log(drink.drinks.idDrink);\n  //     updateDrink(data);\n  //   });\n  \n  // }\n  \n};\n\nexport default DrinkSelection;","import React from 'react';\nimport DrinkSelection from '../components/DrinkSelection';\n\n\nconst SingleDrink = () => {\n  return (\n    <main>\n        <div className=\"flex-row justify-center\">\n          <div className=\" mb-3 p-3\">\n           <DrinkSelection />\n          </div>\n        </div>\n    </main>\n)};\n\nexport default SingleDrink;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"hero is-info\">\n      <div className=\"hero-body\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <Link className=\"\" to=\"/\">\n          <h1 className=\"title has-text-centered is-size-1 pb-3\">Pick Your Poison</h1>\n        </Link>\n        <p className=\"subtitle has-text-centered\">Let us pick your perfect cocktail.</p>\n      </div>\n        <div className=\"center\">\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/me\">\n                {Auth.getProfile().data.username}'s profile\n              </Link>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"button is-white is-outlined has-text-white  is-rounded city-button\" to=\"/Login-SignUp\">\n                Login/Sign-Up\n              </Link>\n\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\n// import { useLocation, useHistory, } from 'react-router-dom';\n\nconst Footer = () => {\n  // const location = useLocation();\n  // const history = useHistory();\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        \n      <strong>Pick Your Poison</strong> by <a href=\"https://github.com/Hov92\">Dwayne Hovington</a>, <a href=\"https://github.com/dtmerrill\">Dana Merrill</a>, <a href=\"https://github.com/shatikka-mcknight\">Shatikka McKnight</a>, and <a href=\"https://github.com/HenryVernon\">Henry Vernon</a>.\n        \n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import './App.css';\nimport React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Users from './pages/Users';\nimport LoginSignUp from './pages/Login-SignUp';\nimport NonUsers from './pages/NonUsers';\nimport SingleDrink from './pages/SingleDrink';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Switch>\n          <div className=\"flex-column justify-flex-start min-100-vh\">\n            <Header />\n            <div className=\"container\">\n            <Route exact path=\"/\">\n                <Home />\n                \n              </Route>\n            <Redirect to=\"/\" />\n            <Route exact path=\"/\">\n              <NonUsers />\n              \n            </Route>\n            <Route exact path=\"/Login-SignUp\">\n              <LoginSignUp />\n            </Route>\n            <Route exact path=\"/Users\">\n              <Users />\n              {/* dashboard fro sign-in-users */}\n            </Route>\n            <Route exact path=\"/SingleDrink\">\n              <SingleDrink />\n            </Route>\n             {/*<Route exact path=\"/DrinkList/:Id\">\n              <DrinkList />\n            </Route> */}\n          </div>\n          <Footer />\n          </div>\n        </Switch>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}